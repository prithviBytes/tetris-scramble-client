[{"D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\index.js":"1","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\App.js":"2","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\Registration.js":"3","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\Login.js":"4","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\game\\online\\publicRoom.js":"5"},{"size":159,"mtime":1610899455400,"results":"6","hashOfConfig":"7"},{"size":637,"mtime":1610988179782,"results":"8","hashOfConfig":"7"},{"size":2084,"mtime":1610993391430,"results":"9","hashOfConfig":"7"},{"size":2060,"mtime":1610988013597,"results":"10","hashOfConfig":"7"},{"size":905,"mtime":1610988208179,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"o38kbr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\index.js",[],["26","27"],"D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\App.js",["28","29"],"import axios from 'axios'; // might want to use axios for all requests later [TBD]\r\nimport React, {useState} from 'react';\r\nimport Registration from './Registration';\r\nimport Login from './Login';\r\nimport join from '../game/online/publicRoom';\r\n\r\n// Root container for every other component/ component group.\r\n//If you can - group components within one to avoid this component to become\r\n//too lengty and too detailed\r\n\r\nconst App = () => {   \r\n    return (\r\n        <div>\r\n            <button onClick={join}>Test connect</button>   \r\n            <Registration />\r\n            <Login />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\Registration.js",["30"],"import axios from 'axios'; \r\nimport React, { useState } from 'react';\r\n\r\nconst Registration = () => {\r\n    const [usernameInput, setUsernameInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n\r\n    const handleUsernameChange = (newValue) => {\r\n        setUsernameInput(newValue);\r\n    }\r\n\r\n    const handlePasswordChange = (newValue) => {\r\n        setPasswordInput(newValue);\r\n    }\r\n\r\n    const handleEmailChange = (newValue) => {\r\n        setEmailInput(newValue);\r\n    }\r\n\r\n    const sendRegisterUserForm = async () => {\r\n        const user = {\r\n            username: usernameInput,\r\n            password: passwordInput,\r\n            email: emailInput\r\n        }\r\n        \r\n        const endpoint = `${process.env.REACT_APP_API_BASE_ADDRESS}/api/v1/auth/register`\r\n        const res = await fetch(endpoint, \r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n            },\r\n            body: JSON.stringify(user),\r\n        });\r\n        const parsedRes = await res.json();\r\n        console.log(parsedRes);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n                Registration\r\n            <br />\r\n            <div>\r\n                <label>Username</label>\r\n                <input type=\"text\" value={usernameInput} onChange={(e) => handleUsernameChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Password</label>\r\n                <input type=\"password\" value={passwordInput} onChange={(e) => handlePasswordChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Email</label>\r\n                <input type=\"email\" value={emailInput} onChange={(e) => handleEmailChange(e.target.value)} />\r\n            </div>\r\n            <button onClick={sendRegisterUserForm}>Submit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\components\\Login.js",["31","32","33"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nrequire('dotenv').config();\r\n\r\nconst Login = () => {\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    const handleEmailChange = (newValue) => {\r\n        setEmailInput(newValue);\r\n    }\r\n\r\n    const handlePasswordChange = (newValue) => {\r\n        setPasswordInput(newValue);\r\n    }\r\n\r\n    const loginUser = async () => {\r\n        const requestBody = {\r\n            email: emailInput,\r\n            password: passwordInput\r\n        }\r\n\r\n        console.log(process.env);\r\n\r\n        const endpoint = `${process.env.REACT_APP_API_BASE_ADDRESS}/api/v1/auth/login`\r\n        const res = await fetch(endpoint, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            const payload = await res.json();\r\n            localStorage.setItem('bearer-token', payload.token);\r\n            console.log('Logged in.');\r\n        }\r\n        else {\r\n            // TODO: Add better error handling towards the user.\r\n            console.error(`Not good ${res}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            Login\r\n            <br />\r\n            <div>\r\n                <label>Email</label>\r\n                <input type=\"text\" value={emailInput} onChange={(e) => handleEmailChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Password</label>\r\n                <input type=\"password\" value={passwordInput} onChange={(e) => handlePasswordChange(e.target.value)} />\r\n            </div>\r\n            <button onClick={loginUser}>Log in</button>\r\n            <div>The user is {userName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Forks\\auth_feature\\tetris-scramble-client\\client\\src\\game\\online\\publicRoom.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":2,"column":16,"nodeType":"40","messageId":"41","endLine":2,"endColumn":24},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":2,"column":27,"nodeType":"40","messageId":"41","endLine":2,"endColumn":36},{"ruleId":"38","severity":1,"message":"44","line":8,"column":22,"nodeType":"40","messageId":"41","endLine":8,"endColumn":33},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'setUserName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]